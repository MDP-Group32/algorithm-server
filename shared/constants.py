import math

ROBOT_THEORETICAL_WIDTH = 25
ROBOT_THEORETICAL_HEIGHT = 28
ROBOT_ACTUAL_WIDTH = 18.8
ROBOT_ACTUAL_HEIGHT = 23
VERTO = (ROBOT_THEORETICAL_HEIGHT - ROBOT_ACTUAL_HEIGHT) / 2

FORWARD_LEFT_RADIUS = [(-0.5, 4, 0.3927), (-1.5, 8, 0.7854), (-3.5, 10.5, 1.1781), (-6.5, 11, 1.5707963267948966)]
FORWARD_RIGHT_RADIUS = [(5.5, 12.5, -0.3142), (13, 16, -0.6283), (20.5, 38.5, -0.9425), (34, 51, -1.2566), (54, 55, -1.5707963267948966)]
BACKWARD_RIGHT_RADIUS = [(9, -20.5, 0.3142), (16, -34, 0.6283), (23.5, -46, 0.9425), (47.5, -55, 1.2566), (55, -56, 1.5707963267948966)]
BACKWARD_LEFT_RADIUS = [(-0.5,-3.5, -0.3927), (-3.5, -6, -0.7854), (-8, -6.25, -1.1781), (-12, -6.5, -1.5707963267948966)]

ALLOWANCE = 5.01

IA1, IB1 = (19.8, 25.3)
IA2, IB2 = (44.6, 51.3)
IA3, IB3 = (48.9, 43.1)
IA4, IB4 = (29, 22.5)

GRID_LENGTH = 5
BACKWARD_DISTANCE = GRID_LENGTH
FORWARD_DISTANCE = GRID_LENGTH

CIRCUMFERENCE = lambda a, b: math.pi * ( 3*(a+b) - math.sqrt( (3*a + b) * (a + 3*b) ) )
FORWARD_LEFT_DISPLACEMENT = FORWARD_LEFT_RADIUS[-1][0], FORWARD_LEFT_RADIUS[-1][1], CIRCUMFERENCE(IA1, IB1)/4
FORWARD_RIGHT_DISPLACEMENT = FORWARD_RIGHT_RADIUS[-1][0], FORWARD_RIGHT_RADIUS[-1][1], CIRCUMFERENCE(IA2, IB2)/4
BACKWARD_LEFT_DISPLACEMENT = BACKWARD_LEFT_RADIUS[-1][0], BACKWARD_LEFT_RADIUS[-1][1], CIRCUMFERENCE(IA4, IB4)/4
BACKWARD_RIGHT_DISPLACEMENT = BACKWARD_RIGHT_RADIUS[-1][0], BACKWARD_RIGHT_RADIUS[-1][1], CIRCUMFERENCE(IA3, IB3)/4

PENALIZE_STOP_MOTION_FACTOR = 30
ANGLE_ALLOWANCE = 0.30
X_ALLOWANCE = 5, 5  # Left, Right
Y_ALLOWANCE = 5, 5 # Up, Down


OBSTACLE_SIZE = 10
EDGE_ERR = 0.5

FORWARD_LEFT_ARC = 41
FORWARD_RIGHT_ARC = 54
BACKWARD_LEFT_ARC = 47
BACKWARD_RIGHT_ARC = 69

INCREMENTAL = 1.5

MOVE_1_BOUND = [OBSTACLE_SIZE/2 + IA1 - ROBOT_THEORETICAL_WIDTH/2 + ROBOT_THEORETICAL_HEIGHT - VERTO, 
              OBSTACLE_SIZE/2 + ROBOT_THEORETICAL_WIDTH]

MOVE_2_BOUND = [OBSTACLE_SIZE/2 + FORWARD_LEFT_ARC + (IB1 - IA1) + VERTO, 
              OBSTACLE_SIZE/2]

MOVE_3_BOUND = [OBSTACLE_SIZE/2, 
              OBSTACLE_SIZE/2 + IA2 + ROBOT_THEORETICAL_WIDTH/2 + ROBOT_THEORETICAL_HEIGHT - VERTO]

MOVE_4_BOUND = [OBSTACLE_SIZE/2 + FORWARD_RIGHT_ARC + (IB2 - IA1) + VERTO, 
              OBSTACLE_SIZE/2]

MOVE_5_BOUND = [OBSTACLE_SIZE/2 + (IA4*INCREMENTAL) - ROBOT_THEORETICAL_WIDTH/2 + VERTO, 
              OBSTACLE_SIZE/2 + BACKWARD_LEFT_ARC - ((IA4*INCREMENTAL) - ROBOT_THEORETICAL_WIDTH/2)] 

MOVE_6_BOUND = [OBSTACLE_SIZE/2 + ROBOT_THEORETICAL_HEIGHT, 
              OBSTACLE_SIZE/2 + (IB4*INCREMENTAL) + ROBOT_THEORETICAL_WIDTH/2 - VERTO]

MOVE_7_BOUND = [OBSTACLE_SIZE/2 + BACKWARD_RIGHT_ARC - (IA3*INCREMENTAL) - ROBOT_THEORETICAL_WIDTH/2, 
              OBSTACLE_SIZE/2 + (IA3*INCREMENTAL) + ROBOT_THEORETICAL_WIDTH/2 + VERTO]

MOVE_8_BOUND = [OBSTACLE_SIZE/2 + ROBOT_THEORETICAL_HEIGHT, 
              OBSTACLE_SIZE/2 + (IB3*INCREMENTAL) + ROBOT_THEORETICAL_WIDTH/2 - VERTO]

CAMERA_OFFSET = 25

MAP_WIDTH = 200 
MAP_HEIGHT = 200
GRID_WIDTH = GRID_LENGTH
GRID_XY = GRID_LENGTH
GRID_ANGLE = 15

